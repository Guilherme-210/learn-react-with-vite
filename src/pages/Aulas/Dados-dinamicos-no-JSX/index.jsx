import Code from "./components/Code/Code.jsx"
import Table from "./components/Table/Table.jsx"
import "./style.css"

export default function DadosDinamicos() {
  let T2 = 0,
    t = 0

  const valTitle = [
    'üéØ O que s√£o "Dados Din√¢micos no JSX"?',
    "üß† O que √© o JSX mesmo?",
    "üß© Como inserir dados din√¢micos?",
    "‚úÖ Exemplo Simples com Vari√°veis",
    "‚öôÔ∏è Usando Express√µes JavaScript",
    "üé≠ Renderiza√ß√£o Condicional (Ex: Tern√°rio)",
    "üîÅ Usando Arrays com .map() para Listas",
    "üö® Regras importantes:",
    "üß™ Resumo R√°pido.",
  ]

  const valText = [
    "Quando a gente fala em dados din√¢micos no JSX, estamos falando da capacidade do React de misturar HTML com JavaScript, permitindo inserir valores, vari√°veis, fun√ß√µes e at√© express√µes diretamente no HTML que estamos escrevendo.",

    "O JSX (JavaScript XML) √© uma sintaxe que parece HTML, mas que roda no JavaScript. Ele √© o jeito que usamos pra escrever a interface no React. E o mais massa: dentro dele, d√° pra usar l√≥gica JS.",

    "Usamos chaves {} dentro do JSX pra indicar que vamos usar c√≥digo JavaScript. A√≠ dentro dessas chaves, voc√™ pode colocar:",
  ]

  return (
    <>
      <main>
        {/* fieldset 1: O que s√£o... */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>
          <p>{valText[t++]}</p>
        </fieldset>

        {/* fieldset 2: O que e... */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>
          <p>{valText[t++]}</p>
        </fieldset>

        {/* fieldset 3: Como inserir dados... */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>
          <p>{valText[t]}</p>
          <div className="div_fieldset">
            <ul>
              <li>Vari√°veis</li>
              <li>Opera√ß√µes</li>
              <li>Fun√ß√µes</li>
              <li>Tern√°rios (condi√ß√µes simples)</li>
              <li>Arrays (inclusive com .map(), por exemplo</li>
            </ul>
          </div>
        </fieldset>

        {/* fieldset 4: Exemplo Simples... */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>

          <Code
            CodeRote="index.jsx"
            CodeContent='const nome = "Guilherme"

function App() {
  return &lt;h1&gt;Ol√°, {nome}!&lt;/h1&gt;
}'
          />
          <p>
            Sa√≠da na tela: <code>Ol√°, Guilherme!</code>
          </p>
        </fieldset>

        {/* fieldset 5: Usando Express√µes... */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>

          <Code
            CodeRote="index.jsx"
            CodeContent="const a = 5
const b = 10

function App() {
  return &lt;p&gt;A soma √©: {a + b}&lt;/p&gt;
}"
          />
          <p>
            Isso renderiza na tela:
            <code>A soma √©: 15</code>
          </p>
        </fieldset>

        {/* fieldset 6: Renderiza√ß√£o Condicional... */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>

          <Code
            CodeRote="index.jsx"
            CodeContent="const logado = true

function App() {
  return (
    &lt;div&gt;
      {logado ? &lt;p&gt;Bem-vindo!&lt;/p&gt; : &lt;p&gt;Por favor, fa√ßa login.&lt;/p&gt;}
    &lt;/div&gt;
  )
}"
          />
          <p>
            Mostra uma mensagem diferente dependendo do valor de{" "}
            <code>logado</code>.
          </p>
        </fieldset>

        {/* fieldset 7: Usando Arrays... */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>

          <Code
            CodeRote="index.jsx"
            CodeContent='const linguagens = ["HTML", "CSS", "JavaScript"]

function App() {
  return (
    <ul>
      {linguagens.map((lang, index) => (
        <li key={index}>{lang}</li>
      ))}
    </ul>
  )
}'
          />
          <p>Isso exibe uma lista com os nomes das linguagens.</p>
        </fieldset>

        {/* fieldset 8: Regras importantes: */}
        <fieldset>
          <legend>{valTitle[T2++]}</legend>
          <div className="div_fieldset">
            <ol>
              <li>Sempre use chaves {} pra inserir dados din√¢micos no JSX.</li>
              <li>
                N√£o d√° pra usar estruturas de controle como if direto (usa
                tern√°rio ou l√≥gica fora do JSX).
              </li>
              <li>
                Sempre coloque key nos elementos de listas (tipo no .map()).
              </li>
              <li>
                JSX s√≥ aceita retornar um √∫nico elemento pai (pode usar uma
                &lt;div&gt; ou &lt;&gt;&lt;/&gt; - os "fragments").
              </li>
            </ol>
          </div>
        </fieldset>

        {/* fieldset 9: Resumo R√°pido. */}

        <fieldset className="fieldset_table">
          <legend>{valTitle[T2++]}</legend>    
            <Table />
        </fieldset>
      </main>
    </>
  )
}
